{"ast":null,"code":"import axios from \"axios\";\n\n// const API_URL = \"http://localhost:5000/api/auth\"; // Your backend URL\n\n// // Register user\n// export const registerUser = async (userData) => {\n//   return axios.post(`${API_URL}/register`, userData);\n// };\n\n// // Login user\n// export const loginUser = async (userData) => {\n//   return axios.post(`${API_URL}/login`, userData);\n// };\n\nconst API_BASE = \"http://localhost:5000/api/auth\";\n\n// Get token from local storage\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem(\"token\");\n  return token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n};\nexport const registerUser = async userData => {\n  console.log(\"Registering user:\", userData); // ✅ Debugging\n  try {\n    const response = await fetch(`${API_BASE}/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    const data = await response.json();\n    console.log(\"Registration Response:\", data); // ✅ Log API Response\n\n    return data;\n  } catch (error) {\n    console.error(\"Registration Error:\", error);\n    return {\n      message: \"Failed to register\"\n    };\n  }\n};\nexport const loginUser = async userData => {\n  const response = await fetch(`${API_BASE}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n  return response.json();\n};\n\n// ✅ Logout user (Clear local storage)\nexport const logoutUser = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"user\");\n  console.log(\"✅ User logged out\");\n};\n\n// ✅ Fetch protected route data\nexport const getProtectedData = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:5000/api/protected\", {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"❌ Protected Data Fetch Error:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    return {\n      message: \"Unauthorized\"\n    };\n  }\n};\n\n// ✅ Fetch admin-only data\nexport const getAdminData = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:5000/api/admin\", {\n      headers: getAuthHeaders()\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"❌ Admin Data Fetch Error:\", (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n    return {\n      message: \"Forbidden\"\n    };\n  }\n};","map":{"version":3,"names":["axios","API_BASE","getAuthHeaders","token","localStorage","getItem","Authorization","registerUser","userData","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","error","message","loginUser","logoutUser","removeItem","getProtectedData","get","_error$response","getAdminData","_error$response2"],"sources":["C:/Users/hp/OneDrive/Desktop/Newfolder/prodigy/authentication_task1/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// const API_URL = \"http://localhost:5000/api/auth\"; // Your backend URL\r\n\r\n// // Register user\r\n// export const registerUser = async (userData) => {\r\n//   return axios.post(`${API_URL}/register`, userData);\r\n// };\r\n\r\n// // Login user\r\n// export const loginUser = async (userData) => {\r\n//   return axios.post(`${API_URL}/login`, userData);\r\n// };\r\n\r\n\r\nconst API_BASE = \"http://localhost:5000/api/auth\"; \r\n\r\n\r\n// Get token from local storage\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return token ? { Authorization: `Bearer ${token}` } : {};\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n    console.log(\"Registering user:\", userData);  // ✅ Debugging\r\n    try {\r\n        const response = await fetch(`${API_BASE}/register`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(userData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log(\"Registration Response:\", data); // ✅ Log API Response\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Registration Error:\", error);\r\n        return { message: \"Failed to register\" };\r\n    }\r\n};\r\n\r\nexport const loginUser = async (userData) => {\r\n  const response = await fetch(`${API_BASE}/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(userData),\r\n  });\r\n  return response.json();\r\n};\r\n\r\n\r\n// ✅ Logout user (Clear local storage)\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"user\");\r\n  console.log(\"✅ User logged out\");\r\n};\r\n\r\n// ✅ Fetch protected route data\r\nexport const getProtectedData = async () => {\r\n  try {\r\n      const response = await axios.get(\"http://localhost:5000/api/protected\", {\r\n          headers: getAuthHeaders()\r\n      });\r\n      return response.data;\r\n  } catch (error) {\r\n      console.error(\"❌ Protected Data Fetch Error:\", error.response?.data);\r\n      return { message: \"Unauthorized\" };\r\n  }\r\n};\r\n\r\n// ✅ Fetch admin-only data\r\nexport const getAdminData = async () => {\r\n  try {\r\n      const response = await axios.get(\"http://localhost:5000/api/admin\", {\r\n          headers: getAuthHeaders()\r\n      });\r\n      return response.data;\r\n  } catch (error) {\r\n      console.error(\"❌ Admin Data Fetch Error:\", error.response?.data);\r\n      return { message: \"Forbidden\" };\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}